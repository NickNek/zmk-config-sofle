/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define SYMBOLS 1
#define NUMPAD 2
#define MOVEMENT 3

/ {
    macros {
        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        ae: ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        oe: oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        ue: ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N2>
                , <&macro_release &kp LALT>
                ;
        };
        _AE: _AE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        _OE: _OE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N4>
                , <&macro_release &kp LALT>
                ;
        };
        _UE: _UE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N0>
                , <&macro_release &kp LALT>
                ;
        };
        ss: ss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N3>
                , <&macro_release &kp LALT>
                ;
        };
        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp F4>
                , <&macro_release &kp LALT>
                ;
        };
    };
};

#define MO_TOG(layer_mo, layer_tog) &mo_tog layer_mo layer_tog

/ {
    behaviors {
        ae_AE: ae_AE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&ae>, <&_AE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        oe_OE: oe_OE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&oe>, <&_OE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ue_UE: ue_UE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&ue>, <&_UE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
        comma_semi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        fslh_bslh: fslh_bslh {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        qmark_excl: qmark_excl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sqt_dqt: sqt_dqt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        minus_under: minus_under {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_lt { key-positions = < 7  8>; bindings = <&kp LT>;    timeout-ms = <50>; layers = <0>;};
        combo_lt { key-positions = < 8  9>; bindings = <&kp GT>;    timeout-ms = <50>; layers = <0>;};
        combo_lt { key-positions = <19 20>; bindings = <&kp LBKT>;  timeout-ms = <50>; layers = <0>;};
        combo_lt { key-positions = <20 21>; bindings = <&kp RBKT>;  timeout-ms = <50>; layers = <0>;};
        combo_lt { key-positions = <31 32>; bindings = <&kp LPAR>;  timeout-ms = <50>; layers = <0>;};
        combo_lt { key-positions = <32 33>; bindings = <&kp RPAR>;  timeout-ms = <50>; layers = <0>;};
        combo_lt { key-positions = <44 45>; bindings = <&kp LBRC>;  timeout-ms = <50>; layers = <0>;};
        combo_lt { key-positions = <45 46>; bindings = <&kp RBRC>;  timeout-ms = <50>; layers = <0>;};
    }
}
    
/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | //\   |
// |  TAB  |  Q  |  W  |  F   |  P   |  B   |                   |  J   |  L    |  U    |  Y   |   ?/! | '/"   |
// |       |  A  |  R  |  S   |  T   |  G   |                   |  M   |  N    |  E    |  I   |   O   | BKSPC |
// | LCTRL |  X  |  C  |  D   |  V   |  Z   |  PRINT |  | BREAK |  K   |  N    |  ,/;  |  ./: |   -/_ |  DEL  |
//               | GUI | ALT  |SYMBLS| LSHFT|  SPACE |  | RET*  |RSHFT | NUMS* |  =    |  -   |
            bindings = <
&kp ESC   &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                            &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &fslh_bslh
&kp TAB   &kp Q  &kp W    &kp F    &kp P     &kp B                             &kp J  &kp L     &kp U     &kp Y    &qmark_excl &sqt_dqt
&none     &kp A  &kp R    &kp S    &kp T     &kp G                             &kp M  &kp N     &kp E     &kp I    &kp O    &kp BSPC
&kp LCTRL &kp X  &kp C    &kp D    &kp V     &kp Z       &kp PSCRN  &kp PAUSE_BREAK &kp K  &kp H &comma_semi &dot_colon  &minus_under &kp DEL
                 &kp LGUI &kp LALT &mo SYMBOLS &kp LSHFT &kp SPACE  &lt MOVEMENT RET  &kp RSHFT MO_TOG(MOVEMENT,NUMPAD) &kp EQUAL &kp MINUS
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp UP DOWN>;
        };

        symbol_layer {
            display-name = "symbols";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |       |     |     |      |      |      |                   |  €   |  [    |  ]    |  ü   |   !   |  F12  |
// |       |  ä  |     |  ß   |      |      |                   |  $   |  (    |  )    |      |   ö   |   |   |
// |       |     |     |      |      |      |        |  |       |  %   |  {    |  }    |  ?   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8    &kp F9    &kp F10   &kp F11
&trans    &none     &none     &none       &none     &none                     &euro     &kp LBKT &kp RBKT  &ue_UE    &kp EXCL  &kp F12
&trans    &ae_AE    &none     &ss         &none     &none                     &kp DLLR  &kp LPAR &kp RPAR  &none     &oe_OE    &trans
&trans    &none     &none     &none       &none     &none      &trans &trans  &kp PRCNT &kp LBRC &kp RBRC  &kp QMARK &kp BSLH  &trans
                    &trans    &trans      &trans    &trans     &trans &trans  &trans    &trans   &kp PIPE  &kp AMPS
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp UP DOWN>;
        };

        numpad_layer {
            display-name = "numpad";
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   | BT CLR ALL   |             |      |   7  |   8   |  9   |       |       |
// |        |         |         |         |         |         |                  |      |   4  |   5   |  6   |   #   |       |
// |        |         |         |         |         |         |                  |      |   1  |   2   |  3   |       |       |
// |        |         |         |         |         |         |         | |      |      |   0  |   '   |  "   |   *   |       |
//                    |         |         |         |         |         | |      |      |      |   ~   |  +   |
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_CLR_ALL                          &none &kp N7 &kp N8    &kp N9      &none            &none
&none             &none           &none           &none           &none           &none                                   &none &kp N4 &kp N5    &kp N6      &kp HASH         &none
&none             &none           &none           &none           &none           &none                                   &none &kp N1 &kp N2    &kp N3      &none            &none
&none             &none           &none           &none           &none           &none            &none           &none  &none &kp N0 &kp SQT   &kp DQT     &kp KP_MULTIPLY  &none
                                  &none           &none           &none           &none            &none           &none  &none &trans &kp GRAVE &kp KP_PLUS
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp UP DOWN>;
        };

        movement_layer {
            display-name = "mvnt";
// ------------------------------------------------------------------------------------------------------------
// |       |      |      |       |       |      |                |      |      |  PGUP |      |       |       |
// |       | INS  | PSCR | GUI   |       |      |                |      |      |   ^   |      |       |       |
// |       | ALT  | CTRL | SHIFT |       | CAPS |                | HOME |   <- |   v   |  ->  |  END  |       |
// |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |  PGDN |      |       |       |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&none      &none        &none        &none        &none        &none                         &none     &none     &kp PG_UP &none     &none   &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &none                         &none     &none     &kp UP    &none     &none   &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &none        &kp CLCK                      &kp HOME  &kp LEFT  &kp DOWN  &kp RIGHT &kp END &trans
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &none         &trans  &trans  &none     &none     &kp PG_DN &none     &none   &trans
                        &trans       &trans       &trans       &trans        &trans  &trans  &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };


    };
};
