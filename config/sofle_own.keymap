/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define DOWNUP 1
#define MOVEMENT1 2
#define MOVEMENT2 3
#define NUMERIC 4
#define SYMBOLS 5
#define SERVICE 6

#define WAIT_MS 10
#define TAP_MS 10

/ {
    macros {
        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        ae: ae { //TODO: adjust timing for äöü
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        oe: oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        ue: ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N2>
                , <&macro_release &kp LALT>
                ;
        };
        _AE: _AE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        _OE: _OE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N1 &kp KP_N5 &kp KP_N3>
                , <&macro_release &kp LALT>
                ;
        };
        _UE: _UE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N0>
                , <&macro_release &kp LALT>
                ;
        };
        ss: ss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N3>
                , <&macro_release &kp LALT>
                ;
        };
        avg: avg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        prmll: prmll {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N3 &kp KP_N7>
                , <&macro_release &kp LALT>
                ;
        };
        mult: mult {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N1 &kp KP_N5>
                , <&macro_release &kp LALT>
                ;
        };
        deg: deg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        tick: tick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N2 &kp KP_N3 &kp KP_N9>
                , <&macro_release &kp LALT>
                ;
        };
        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp F4>
                , <&macro_release &kp LALT>
                ;
        };
        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp X>
                , <&macro_release &kp LCTRL>
                ;
        };
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };
        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };
        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp Z>
                , <&macro_release &kp LCTRL>
                ;
        };
        redo: redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp Y>
                , <&macro_release &kp LCTRL>
                ;
        };
        left8: left8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_tap     &kp LEFT>
                , <&macro_tap     &kp LEFT>
                , <&macro_tap     &kp LEFT>
                , <&macro_tap     &kp LEFT>
                , <&macro_tap     &kp LEFT>
                , <&macro_tap     &kp LEFT>
                , <&macro_tap     &kp LEFT>
                , <&macro_tap     &kp LEFT>
                ;
        };
        right8: right8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_tap     &kp RIGHT>
                , <&macro_tap     &kp RIGHT>
                , <&macro_tap     &kp RIGHT>
                , <&macro_tap     &kp RIGHT>
                , <&macro_tap     &kp RIGHT>
                , <&macro_tap     &kp RIGHT>
                , <&macro_tap     &kp RIGHT>
                , <&macro_tap     &kp RIGHT>
                ;
        };
        up8: up8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_tap     &kp UP>
                , <&macro_tap     &kp UP>
                , <&macro_tap     &kp UP>
                , <&macro_tap     &kp UP>
                , <&macro_tap     &kp UP>
                , <&macro_tap     &kp UP>
                , <&macro_tap     &kp UP>
                , <&macro_tap     &kp UP>
                ;
        };
        down8: down8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_tap     &kp DOWN>
                , <&macro_tap     &kp DOWN>
                , <&macro_tap     &kp DOWN>
                , <&macro_tap     &kp DOWN>
                , <&macro_tap     &kp DOWN>
                , <&macro_tap     &kp DOWN>
                , <&macro_tap     &kp DOWN>
                , <&macro_tap     &kp DOWN>
                ;
        };
        shift_f12: shift_f12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LSHFT>
                , <&macro_tap     &kp F12>
                , <&macro_release &kp LSHFT>
                ;
        };
        ctl_min: ctl_min {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp MINUS>
                , <&macro_release &kp LCTRL>
                ;
        };
        ctl_shf_min: ctl_shf_min {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LCTRL>
                = <&macro_press   &kp LSHFT>
                , <&macro_tap     &kp MINUS>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LCTRL>
                ;
        };
        ctl_f: ctl_f {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp F>
                , <&macro_release &kp LCTRL>
                ;
        };
        ctl_d: ctl_d {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <WAIT_MS>;
            tap-ms = <TAP_MS>;
            bindings
                = <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp D>
                , <&macro_release &kp LCTRL>
                ;
        };
    };
};

/ {
    behaviors {
        ae_AE: ae_AE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&ae>, <&_AE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        oe_OE: oe_OE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&oe>, <&_OE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ue_UE: ue_UE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&ue>, <&_UE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
        comma_semi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        fslh_bslh: fslh_bslh {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_SLASH>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        qmark_excl: qmark_excl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sqt_dqt: sqt_dqt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        minus_under: minus_under {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        equal_hash: equal_hash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp HASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        plus_mult: plus_mult {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_PLUS>, <&kp KP_MULTIPLY>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        undo_redo: undo_redo {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&undo>, <&redo>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        inc_dec_down_up: inc_dec_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&down8>, <&up8>;
        };   
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo0 { key-positions = <7 8>; bindings = <&kp LT>;    timeout-ms = <50>; layers = <0>;};  // < 
        combo1 { key-positions = <8 9>; bindings = <&kp GT>;    timeout-ms = <50>; layers = <0>;};  // >
        combo2 { key-positions = <19 20>; bindings = <&kp LBKT>;  timeout-ms = <50>; layers = <0>;};  // [
        combo3 { key-positions = <20 21>; bindings = <&kp RBKT>;  timeout-ms = <50>; layers = <0>;};  // (
        combo4 { key-positions = <31 32>; bindings = <&kp LPAR>;  timeout-ms = <50>; layers = <0>;};  // ]
        combo5 { key-positions = <32 33>; bindings = <&kp RPAR>;  timeout-ms = <50>; layers = <0>;};  // )
        combo6 { key-positions = <45 46>; bindings = <&kp LBRC>;  timeout-ms = <50>; layers = <0>;};  // {
        combo7 { key-positions = <46 47>; bindings = <&kp RBRC>;  timeout-ms = <50>; layers = <0>;};  // }

        combo8 { key-positions = <54 55>; bindings = <&caps_word>;  timeout-ms = <50>; layers = <0>;};  // both shift kezs for caps word

        combo9 { key-positions = <42 54>; bindings = <&mo SERVICE>;  timeout-ms = <100>; layers = <0>;};  // left encoder and left big key for BT etc.
    };
};
    
/ {

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | //\   |
// |  TAB  |  Q  |  W  |  F   |  P   |  B   |                   |  J   |  L    |  U    |  Y   |   ?/! | '/"   |
// |       |  A  |  R  |  S   |  T   |  G   |                   |  M   |  N    |  E    |  I   |   O   | BKSPC |
// | LCTRL |  Z  |  X  |  C   |  D   |  V   |  CTX   |  | PRINT |  K   |  N    |  ,/;  |  ./: |   -/_ |  DEL  |
//               | WIN | ALT  |SYMBLS| SPACE| LSHFT  |  | RSHFT | RET} | NUMS* |  =/#  |  +/* |
            bindings = <
&kp ESC          &kp N1 &kp N2   &kp N3   &kp N4      &kp N5                                       &kp N6            &kp N7      &kp N8      &kp N9     &kp N0       &fslh_bslh
&kp TAB          &kp Q  &kp W    &kp F    &kp P       &kp B                                        &kp J             &kp L       &kp U       &kp Y      &qmark_excl  &sqt_dqt
&none            &kp A  &kp R    &kp S    &kp T       &kp G                                        &kp M             &kp N       &kp E       &kp I      &kp O        &kp BSPC
&kp LCTRL        &kp Z  &kp X    &kp C    &kp D       &kp V     &lt DOWNUP K_CMENU &mt RCTRL PSCRN &kp K             &kp H       &comma_semi &dot_colon &minus_under &kp DEL
                        &kp LGUI &kp LALT &mo SYMBOLS &kp SPACE &kp LSHFT          &kp RSHFT       &lt MOVEMENT1 RET &mo NUMERIC &equal_hash &plus_mult
            >;
            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };

        down_up_layer {
            display-name = "down_up";
// -----------------------------------------------------------------------------------------------------------
// |   t  |      |      |       |       |      |                |      |      |       |      |       |       |
// |      |      |      |       |       |      |                |      |      |       |      |       |       |
// |      |      |      |       |       |      |                |      |      |       |      |       |       |
// |   t  |      |      |       |       |      |                |      |      |       |      |       |       |
//               |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&trans     &none        &none        &none        &none        &none                         &none     &none     &none    &none     &none   &none
&none      &none        &none        &none        &none        &none                         &none     &none     &none    &none     &none   &none
&trans     &none        &none        &none        &none        &none                         &none     &none     &none    &none     &none   &none
&none      &none        &none        &none        &none        &none    &trans     &trans    &none     &none     &none    &none     &none   &none
                        &trans       &trans       &none        &none    &trans     &trans     &trans    &none     &none    &none
            >;
            sensor-bindings = <&inc_dec_down_up &inc_dec_kp RIGHT LEFT>;
        };

        movement1_layer {
            display-name = "movement1";
// ------------------------------------------------------------------------------------------------------------
// |   t   |  F1  |  F2  |  F3   |  F4   |  F5  |                |  F6  |  F7  |  F8   |  F9  |  F10  |  F11  |
// |   t   |shfF12|  F12 |ctlMin |ctshMin|ctl-F |                |      |      |       |      | BREAK |  F12  |
// |   t   | WIN  | ALT  | CTRL  | SHIFT |      |                | HOME |   <- |   ^   |  ->  |  END  |   t   |
// |   t   | UNDO | CUT  | COPY  | PASTE |ctl-D |   t  |  |   t  |      |      |   v   |      |  INS  |   t   |
//                |  t   |   t   |   t   |   t  |   t  |  |   t  |   t  |      |       |      |
            bindings = <
&trans     &kp F1       &kp F2       &kp F3       &kp F4       &kp F5                        &kp F6    &kp F7    &kp F8    &kp F9    &kp F10         &kp F11
&trans     &shift_f12   &kp F12      &ctl_min     &ctl_shf_min &ctl_f                        &none     &none     &none     &none     &kp PAUSE_BREAK &kp F12
&trans     &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHFT    &none                         &kp HOME  &kp LEFT  &kp UP    &kp RIGHT &kp END         &trans
&trans     &undo_redo   &cut         &copy        &paste       &ctl_d        &trans  &trans  &none     &none     &kp DOWN  &none     &kp INS         &trans
                        &trans       &trans       &trans       &mo MOVEMENT2 &trans  &trans  &trans    &none     &none     &none
            >;
            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };

        movement2_layer {
            display-name = "movement2";
// ------------------------------------------------------------------------------------------------------------
// |   t   |  F1  |  F2  |  F3   |  F4   |  F5  |                |  F6  |  F7  |  F8   |  F9  |  F10  |  F11  |
// |   t   |   t  |   t  |   t   |   t   |  t   |                |      |      |       |      |   t   |  F12  |
// |   t   |   t  |   t  |   t   |   t   |      |                | HOME | 8*<- |  PGUP | 8*-> |  END  |   t   |
// |   t   |   t  |   t  |   t   |   t   |  t   |   t  |  |   t  |      |      |  PGDN |      |  INS  |   t   |
//                |   t  |   t   |   t   |  t   |   t  |  |   t  |   t  |   t  |       |      |
            bindings = <
&trans     &kp F1       &kp F2       &kp F3       &kp F4       &kp F5                   &kp F6    &kp F7    &kp F8    &kp F9    &kp F10 &kp F11
&trans     &trans       &trans       &trans       &trans       &trans                   &none     &none     &none     &none     &trans  &kp F12
&trans     &trans       &trans       &trans       &trans       &none                    &kp HOME  &left8    &kp PG_UP &right8   &kp END &trans
&trans     &trans       &trans       &trans       &trans       &trans   &trans  &trans  &none     &none     &kp PG_DN &none     &kp INS &trans
                        &trans       &trans       &trans       &trans   &trans  &trans  &trans    &none     &none     &none
            >;
            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };

        numeric_layer {
            display-name = "numeric";
// -------------------------------------------------------------------------------------------------------------------------
// |    t   |         |         |         |         |         |               |      |      |       |      |   /   |   t   |
// |    t   |         |         |         |         |         |               |      |   7  |   8   |  9   |   *   |   t   |
// |    t   |   WIN   |   ALT   |   CTRL  |  SHIFT  |         |               |      |   4  |   5   |  6   |   +   |   t   |
// |    t   |   UNDO  |   CUT   |   COPY  |  PASTE  |  PASTE  |   t  | |  t   |      |   1  |   2   |  3   |   -   |   t   |
//               t    |    t    |     t   |    t    |    t    |   t  | |  t   |   t  |   t  |   0   |  ./, |
            bindings = <
&trans   &none      &none    &none     &none     &none                   &none    &none     &none     &none     &kp FSLH        &trans
&trans   &none      &none    &none     &none     &none                   &none    &kp N7    &kp N8    &kp N9    &kp KP_MULTIPLY &trans
&trans   &kp LGUI   &kp LALT &kp LCTRL &kp LSHFT &none                   &none    &kp N4    &kp N5    &kp N6    &kp KP_PLUS     &trans
&trans   &undo_redo &cut     &copy     &paste    &paste  &trans &trans   &none    &kp N1    &kp N2    &kp N3    &kp MINUS       &trans
                    &trans   &trans     &trans   &trans  &trans &trans   &trans   &trans    &kp KP_N0 &dot_comma
            >;
            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };

        symbol_layer {
            display-name = "symbols";
// -------------------------------------------------------------------------------------------------------------------------
// |    t   |    ø    |     €   |    $    |         |         |               |      |  F10 |  F11  |  F12 |       |       |
// |    t   |    @    |     °   |    ´    |     `   |    ^    |               |      |  F7  |  F8   |  F9  |       |       |
// |    t   |    %    |     ä   |    ö    |     ü   |    ß    |               |      |  F4  |  F5   |  F6  |R-CTRL |       |
// |    t   |    ‰    |     ×   |    &    |     |   |    ~    |   t  | |   t  |      |  F1  |  F2   |  F3  |ALT-GR |       |
//                    |     t   |    t    |     t   |    t    |   t  | |   t  |   t  |   t  |       |      |
            bindings = <
&trans   &avg      &euro    &kp DLLR &none     &none                                 &none   &kp F10  &kp F11   &kp F12  &none     &trans
&trans   &kp AT    &deg     &tick    &kp GRAVE &kp CARET                             &none   &kp F7   &kp F8    &kp F9   &none     &trans
&trans   &kp PRCNT &ae_AE   &oe_OE   &ue_UE    &ss                                   &none   &kp F4   &kp F5    &kp F6   &kp RCTRL &trans
&trans   &prmll    &mult    &kp AMPS &kp PIPE  &kp TILDE &kp C_PLAY_PAUSE &kp C_MUTE &none   &kp F1   &kp F2    &kp F3   &kp RALT  &trans
                   &trans   &trans   &trans    &trans    &trans           &trans     &trans  &trans   &none     &none 
            >;
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        service_layer {
            display-name = "service_layer";
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |         |                  |      |      |       |      |       |       |
// | CLR ALL|         |         |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         |         | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            bindings = <
&bt BT_CLR     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none             &none &none &none &none &none  &none
&bt BT_CLR_ALL &none        &none        &none        &none        &none             &none &none &none &none &none  &none
&none          &none        &none        &none        &none        &none             &none &none &none &none &none  &none
&none          &none        &none        &none        &none        &none &none &none &none &none &none &none &none  &none
                            &none        &none        &none        &none &none &none &none &none &none &none
            >;
            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };

    };
};
